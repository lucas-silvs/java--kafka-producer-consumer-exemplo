apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: kafka
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yaml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: broker
  name: broker
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: broker
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yaml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/confluent-all-in-one-default: "true"
        io.kompose.service: broker
    spec:
      containers:
        - env:
            - name: CONFLUENT_METRICS_ENABLE
              value: "true"
            - name: CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS
              value: broker:29092
            - name: CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS
              value: "1"
            - name: CONFLUENT_SUPPORT_CUSTOMER_ID
              value: anonymous
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://broker.kafka.svc.cluster.local:29092,PLAINTEXT_HOST://localhost:9092,SASL_PLAINTEXT://broker.kafka.svc.cluster.local:9093
            # - name: KAFKA_BROKER_ID
            #   value: "1"
            - name: KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL
              value: http://schema-registry-service.kafka.svc.cluster.local:8081
            - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
              value: "0"
            - name: KAFKA_JMX_HOSTNAME
              value: localhost
            - name: KAFKA_JMX_PORT
              value: "9101"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,SASL_PLAINTEXT:SASL_PLAINTEXT
            - name: KAFKA_METRIC_REPORTERS
              value: io.confluent.metrics.reporter.ConfluentMetricsReporter
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper.kafka.svc.cluster.local:2181
            - name: KAFKA_SASL_ENABLED_MECHANISMS
              value: "PLAIN"
            - name: KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL
              value: "PLAIN"
            - name: KAFKA_OPTS
              value: "-Djava.security.auth.login.config=/opt/kafka/config/server_jaas.conf"

            #  -- Uncomment the following lines to enable ACLs
            - name: KAFKA_AUTHORIZER_CLASS_NAME
              value: "kafka.security.authorizer.AclAuthorizer"
            - name: KAFKA_SUPER_USERS
              value: "User:admin"
            - name: KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND
              value: "true"

          image: confluentinc/cp-server:7.5.0
          name: broker
          ports:
            - containerPort: 9092
              hostPort: 9092
              protocol: TCP
            - containerPort: 9101
              hostPort: 9101
              protocol: TCP
            - containerPort: 29092
              hostPort: 29092
              protocol: TCP
            - containerPort: 9093
              hostPort: 9093
              protocol: TCP
          volumeMounts:
            - name: kafka-config
              mountPath: /opt/kafka/config
          resources:
            limits:
              cpu: "1"
              memory: "2Gi"
            requests:
              cpu: "0.5"
              memory: "512Mi"
      volumes:
        - name: kafka-config
          configMap:
            name: kafka-config
      hostname: broker
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: kafka
  name: kafka-config
data:
  server_jaas.conf: |
    KafkaServer {
      org.apache.kafka.common.security.plain.PlainLoginModule required
      username="admin"
      password="admin-secret"
      user_admin="admin-secret"
      user_consumer="sample-password"
      user_producer="sample-password"
      user_lucas="lucas-secret";
    };
    Client {
      org.apache.kafka.common.security.plain.PlainLoginModule required
      username="admin"
      password="admin-secret";
    };
  kafka_server.properties: |
    zookeeper.connect=zookeeper.kafka.svc.cluster.local:2181
    zookeeper.connection.timeout.ms=6000
    security.inter.broker.protocol=SASL_PLAINTEXT
    sasl.mechanism.inter.broker.protocol=PLAIN
    sasl.enabled.mechanisms=PLAIN
    listener.security.protocol.map=PLAINTEXT:PLAINTEXT,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_PLAINTEXT_KEDA:SASL_PLAINTEXT
    listeners=PLAINTEXT://0.0.0.0:9092,SASL_PLAINTEXT://0.0.0.0:9093
    advertised.listeners=PLAINTEXT://broker.kafka.svc.cluster.local:9092,SASL_PLAINTEXT://broker.kafka.svc.cluster.local:9093,SASL_PLAINTEXT_KEDA://broker.kafka.svc.cluster.local:9094
    inter.broker.listener.name=SASL_PLAINTEXT
    authorizer.class.name=kafka.security.authorizer.AclAuthorizer
    super.users=User:admin
    broker.id.generation.enable=true
